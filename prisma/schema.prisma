// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username      String?  @unique
  avatar    String? 
  password  String
  token     String?  @unique
  bio String?
  
  createdAt DateTime @default(now())

  following Follow[] @relation("UserFollowing")
  followers Follow[] @relation("UserFollowers")
  posts     Post[]
  likes     Like[]
  comments  Comment[]
}


model Post {
  id        String   @id @default(uuid())
  content   String
  imageUrl  String? 
  createdAt DateTime @default(now())
hideComments Boolean @default(false)
hideLikes Boolean @default(false)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  likes    Like[]
  comments Comment[]
}

model Follow {
  id          String @id @default(uuid())
  followerId  String
  followingId String

  follower   User @relation("UserFollowers", fields: [followerId], references: [id], onDelete: Cascade)
  following  User @relation("UserFollowing", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId]) 
}


model Like {
  id     String @id @default(uuid())
  userId String
  postId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())

  userId String
  postId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}